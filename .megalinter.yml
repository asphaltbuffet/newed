# Configuration file for MegaLinter
# See all available variables at https://megalinter.io/configuration/ and in linters documentation

APPLY_FIXES: all

# ENABLE: # If you use ENABLE variable, all other languages/formats/tooling formats will be disabled by default
# ENABLE_LINTERS: # If you use ENABLE_LINTERS variable, all other linters will be disabled by default
DISABLE:
  - COPYPASTE # Uncomment to disable checks of excessive copy-pastes
  # - EDITORCONFIG
  - SPELL # Uncomment to disable checks of spelling mistakes
DISABLE_LINTERS:
  - GO_REVIVE # Covered by GolangCI-Lint
  # - JSON_PRETTIER
  # - MARKDOWN_MARKDOWN_LINK_CHECK
  # - REPOSITORY_GITLEAKS
  # - REPOSITORY_KICS
  # - SPELL_PROSELINT
  # - SPELL_MISSPELL
  # - SPELL_VALE
# DISABLE_ERRORS_LINTERS:
#   - PYTHON_BANDIT
#   - REPOSITORY_DEVSKIM
#   - REPOSITORY_GRYPE
#   - REPOSITORY_SEMGREP
#   - REPOSITORY_TRUFFLEHOG
#   - SPELL_LYCHEE
PRINT_ALL_FILES: false
FILTER_REGEX_EXCLUDE: '(testdata|\.git|\.vscode)'
JSON_JSONLINT_FILTER_REGEX_EXCLUDE: '(\.vscode/)'
# YAML_V8R_FILTER_REGEX_EXCLUDE: '(descriptors|templates/\.mega-linter\.yml|\.codecov\.yml)'
# BASH_FILTER_REGEX_EXCLUDE: "(lib)"
MARKDOWN_FILTER_REGEX_EXCLUDE: '(license\.md|docs/.*\.md)'
# MARKDOWN_MARKDOWN_LINK_CHECK_DISABLE_ERRORS: true
SPELL_VALE_FILE_EXTENSIONS:
  - .md
SPELL_FILTER_REGEX_EXCLUDE: (valestyles|\.github|docs/licenses)
# REPOSITORY_TRIVY_ARGUMENTS:
#   - "--skip-dirs"
#   - ".automation/test"
#   - "--skip-dirs"
#   - ".venv"
SHOW_ELAPSED_TIME: true
FLAVOR_SUGGESTIONS: true
EMAIL_REPORTER: false
FILEIO_REPORTER: false
JSON_REPORTER: true
GITHUB_STATUS_REPORTER: true
# PLUGINS:
#   - https://raw.githubusercontent.com/oxsecurity/megalinter/main/.automation/test/mega-linter-plugin-test/test.megalinter-descriptor.yml
PRE_COMMANDS:
  - command: |
      echo "Installing latest version of Go"
      GO_FILE="$(curl --silent https://go.dev/VERSION?m=text | head -n 1).linux-amd64.tar.gz"
      curl -OJ -L "https://go.dev/dl/$GO_FILE"
      GO_LOCAL="$(go env GOROOT)"
      rm -rf "$GO_LOCAL"
      tar -C "$(dirname $GO_LOCAL)" -xf "$GO_FILE"
      go version
    cwd: "root"
POST_COMMANDS:
  - command: echo "This is MegaLinter POST_COMMAND"
    cwd: "workspace"
